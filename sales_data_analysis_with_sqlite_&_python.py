# -*- coding: utf-8 -*-
"""Sales Data Analysis with SQLite & Python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c1ri_EcelBgG12MTKSCy6syL6y5hfH9Q
"""

import sqlite3
import pandas as pd
import matplotlib.pyplot as plt
from datetime import datetime

# Connect to the database
def connect_db(db_name="sales_data.db"):
    return sqlite3.connect(db_name)

def setup_database(conn):
    cursor = conn.cursor()
    cursor.execute("""
    CREATE TABLE IF NOT EXISTS sales (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        product TEXT,
        quantity INTEGER,
        price REAL,
        region TEXT,
        date TEXT
    )
    """)

    sample_data = [
        ('Apple', 10, 2.0, 'North', '2025-01-15'),
        ('Banana', 20, 1.0, 'South', '2025-01-17'),
        ('Orange', 15, 1.5, 'North', '2025-02-10'),
        ('Apple', 5, 2.0, 'West', '2025-02-12'),
        ('Banana', 10, 1.0, 'East', '2025-03-05'),
        ('Orange', 10, 1.5, 'South', '2025-03-18'),
        ('Apple', 12, 2.0, 'North', '2025-03-20'),
        ('Banana', 8, 1.0, 'West', '2025-04-01'),
        ('Orange', 7, 1.5, 'East', '2025-04-08')
    ]

    # âœ… Insert data now
    cursor.executemany("INSERT INTO sales (product, quantity, price, region, date) VALUES (?, ?, ?, ?, ?)", sample_data)
    conn.commit()

# Query: Revenue and quantity by product and region
def get_summary_by_product_region(conn):
    query = """
    SELECT product, region,
           SUM(quantity) AS total_qty,
           ROUND(SUM(quantity * price), 2) AS total_revenue
    FROM sales
    GROUP BY product, region
    ORDER BY total_revenue DESC
    """
    return pd.read_sql_query(query, conn)

# Query: Monthly revenue trend
def get_monthly_revenue_trend(conn):
    query = """
    SELECT strftime('%Y-%m', date) AS month,
           ROUND(SUM(quantity * price), 2) AS total_revenue
    FROM sales
    GROUP BY month
    ORDER BY month
    """
    return pd.read_sql_query(query, conn)

# Plot revenue by product-region as a grouped bar chart
def plot_product_region_bar(df):
    pivot = df.pivot(index='product', columns='region', values='total_revenue').fillna(0)
    pivot.plot(kind='bar', stacked=True, colormap='Set2')
    plt.title("Revenue by Product and Region")
    plt.ylabel("Revenue ($)")
    plt.xlabel("Product")
    plt.tight_layout()
    plt.grid(axis='y', linestyle='--', alpha=0.7)
    plt.savefig("product_region_revenue.png")
    plt.show()

# Plot monthly revenue trend
def plot_monthly_trend(df):
    df['month'] = pd.to_datetime(df['month'])
    df.set_index('month', inplace=True)
    df.plot(kind='line', marker='o', color='green')
    plt.title("Monthly Revenue Trend")
    plt.ylabel("Revenue ($)")
    plt.xlabel("Month")
    plt.tight_layout()
    plt.grid(True)
    plt.savefig("monthly_revenue_trend.png")
    plt.show()

# Run everything
def main():
    conn = connect_db()
    setup_database(conn)

    print("ðŸ“Š Revenue by Product and Region:")
    summary_df = get_summary_by_product_region(conn)
    print(summary_df)
    plot_product_region_bar(summary_df)

    print("\nðŸ“ˆ Monthly Revenue Trend:")
    trend_df = get_monthly_revenue_trend(conn)
    print(trend_df)
    plot_monthly_trend(trend_df)

    conn.close()

if __name__ == "__main__":
    main()